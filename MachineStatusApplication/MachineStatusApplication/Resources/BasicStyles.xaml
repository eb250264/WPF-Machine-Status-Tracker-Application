<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MachineStatusApplication.Views"
                    xmlns:converters="clr-namespace:MachineStatusApplication.Converters"
                    xmlns:local2="clr-namespace:MachineStatusApplication.Views">

    <converters:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />

    <!--<Color x:Key="MainColor">#FF3c7782</Color>-->

    <Style TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Open Sans Regular"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <Style TargetType="TextBox">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Open Sans Regular"/>
        <Setter Property="Height" Value="42"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <Style TargetType="Button">
        <Setter Property="Height" Value="42"/>
    </Style>
    <Style x:Key="popupTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#3c7782"/>
        <Setter Property="FontFamily" Value="Open Sans Bold"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="textBoxDescriptions" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="Open Sans Regular"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="RegularButton" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Open Sans Semibold"/>
        <Setter Property="Padding" Value="10,5,10,5"/>
        <Setter Property="Height" Value="42"/>
        <Setter Property="Width" Value="93"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="saveButton" BasedOn="{StaticResource RegularButton}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#3c7782"/>
        <Setter Property="Foreground" Value="White"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border  x:Name="border" CornerRadius="4" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                              TextElement.Foreground="{TemplateBinding Foreground}"
                                          TextElement.FontWeight="Bold">
                            </ContentPresenter>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#3c7782"/>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF33962B"/>
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AddNewButton" BasedOn="{StaticResource saveButton}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="140"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>

    <Style x:Key="DeletEditButton" BasedOn="{StaticResource saveButton}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="140"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="Foreground" Value="#3c7782"/>

        <Setter Property="Background" Value="#d2e3ec"/>
    </Style>

    

    <Style x:Key="cancelButton" BasedOn="{StaticResource RegularButton}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#EDF0F5"/>
        <Setter Property="Foreground" Value="#3c7782"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border  x:Name="border" CornerRadius="4" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                              TextElement.Foreground="{TemplateBinding Foreground}"
                                          TextElement.FontWeight="Bold">
                            </ContentPresenter>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="LightGray"/>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF33962B"/>
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

   

    <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
        <Border Background="{TemplateBinding Background}" 
                x:Name="Bd" BorderBrush="#CBDDFA"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
            <ScrollViewer x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="100"/>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="20"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>